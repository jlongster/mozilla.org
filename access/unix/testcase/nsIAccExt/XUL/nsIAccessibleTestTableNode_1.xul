<?xml version="1.0"?>
<?xml-stylesheet href="chrome://global/skin/" type="text/css"?>
<!-- Descrpt: Test nsIAccessibleTable Interface methods for XUL tree Node
  - test component: attribute: columns,columnHeader,rows
  - Method: getIndexAt()
  - Author: jessie.li@sun.com
  - Copyright (C) 2002 Sum Microsystems Corp.  All Rights Reserved.      
  -->
  
<window
     id="test-window"
     title="test"
     orient="horizontal"
     xmlns:html="http://www.w3.org/1999/xhtml"
     xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul">
    
 <script src="accessibility.js"/>
    
 <html:script>
  <![CDATA[
  

function getDomNodeTable()
{
 try{
  netscape.security.PrivilegeManager.enablePrivilege("UniversalBrowserRead");
  netscape.security.PrivilegeManager.enablePrivilege("UniversalXPConnect");

  var node = document.getElementsByTagName("tree").item(0);
  return node;
 }
 catch(e){
  alert("Exception: " + e);
 }
}

function executeTestCase()
{
  
  var domNode = getDomNodeTable();

  if(domNode == null)
  {
    res = res + "Could not get the DOM Node";
    
  }
  else
  { //else1
    accNode = getAccessibleTableNode(domNode);
    
    if(accNode == "Exception")
    {
      res = res + "The Node you selected is not an Accessible Node";
      
    }
    else
    { //else2
     try{
	   netscape.security.PrivilegeManager.enablePrivilege("UniversalBrowserRead");
	   netscape.security.PrivilegeManager.enablePrivilege("UniversalXPConnect");

	   setTimeout("constructResults();", 2000);
     }
     catch(e){
      alert("Exception**: " + e);
     }
    }//else2
  } //else1
}

function constructResults()
{
 try{
   netscape.security.PrivilegeManager.enablePrivilege("UniversalBrowserRead");
   netscape.security.PrivilegeManager.enablePrivilege("UniversalXPConnect");
   
   var columns = getColumns(accNode);
   var rows = getRows(accNode);
       
   var columnHeader = accNode.columnHeader;
   columnHeaderIndex = columnHeader.getIndexAt(0,2);
      
   var expectedColumns     = "4";
   var expectedRows     = "2";
   var expectedColumnHeaderIndex = "2";
   
   var row0 = new Array("Property/Method", "Expected Values", "Actual Values", "Result");
   var row1 = new Array("Columns->", expectedColumns, columns);
   var row2 = new Array("Rows->", expectedRows, rows);
   var row3 = new Array("columnHeaderIndex->", expectedColumnHeaderIndex, columnHeaderIndex);

   if (columns == expectedColumns)        row1[3] = "PASS"; else row1[3] = "FAIL";
   if (rows == expectedRows)              row2[3] = "PASS"; else row2[3] = "FAIL";
   if (columnHeaderIndex == expectedColumnHeaderIndex)             row3[3] = "PASS"; else row3[3] = "FAIL";

   res += "<table border cols=4 width='70%'>";
   res += "<tr>";
   for(col=0; col<4; col++)
     res += "<td><b>" + row0[col] + "</b></td>";
   res += "</tr>";
   res += "<tr>";
   for(col=0; col<4; col++)
   {
    if(row1[col] == "FAIL")
     res += "<td bgcolor='#FF0000'>" + row1[col] + "</td>";
    else
     res += "<td>" + row1[col] + "</td>";
   }
   res += "</tr>";
   res += "<tr>";
   for(col=0; col<4; col++)
   {
    if(row2[col] == "FAIL")
     res += "<td bgcolor='#FF0000'>" + row2[col] + "</td>";
    else
     res += "<td>" + row2[col] + "</td>";
   }
   res += "</tr>";
   res += "<tr>";
   for(col=0; col<4; col++)
   {
    if(row3[col] == "FAIL")
     res += "<td bgcolor='#FF0000'>" + row3[col] + "</td>";
    else
     res += "<td>" + row3[col] + "</td>";
   }
   res += "</tr>";
   res += "</table>";

   displayResults(res);
 }
 catch(e){
  alert("Exception**: " + e);
 }
}

 
  ]]>
  </html:script>
<description> 
       Testing XUL tree for Accessibility:
</description>   
<tree flex="1">
<treecols>
<treecol id="breakfast" label="Breakfast" flex="1"/>
<treecol id="lunch" label="Lunch" flex="1"/>
<treecol id="dinner" label="Dinner" flex="1"/>

</treecols>

<treechildren>
<treeitem>
<treerow>
<treecell label="Cheese Omelet"/>
<treecell label="Ham Sandwich"/>
<treecell label="Grapefruit"/>

</treerow>
</treeitem>
<treeitem>
<treerow>
<treecell label="Waffles"/>
<treecell label="Caesar Salad"/>
<treecell label="Cheeseburger"/>

</treerow>
</treeitem>

</treechildren>
</tree>
<iframe id="iframe" class="iframe" type="content"
            flex="1" context="outputContext"/>  

  <html:script>
  <![CDATA[
  
    res = "<b><u> Results for XUL tree Node:</u></b><br><br>";
    setTimeout("executeTestCase();", 2000);
  ]]>
  </html:script>
    
</window>
